---
- name: Image Mode CI/CD - AAP | Build RHEL Image Mode container
  hosts: build_host
  tasks:
    - name: Image Mode CI/CD - AAP | Set working directory
      ansible.builtin.set_fact:
        workdir: "{{ working_dir | default(lookup('env','HOME') + '/rhel-image-mode', true) }}"

    - name: Image Mode CI/CD - AAP | Set working directory
      ansible.builtin.set_fact:
        build_dir: "{{ workdir }}/_build"

    - name: Image Mode CI/CD - AAP | Clone repo
      ansible.builtin.git:
        repo: "{{ repo_url }}"
        dest: "{{ build_dir }}"

    - name: Image Mode CI/CD - AAP | Login to registry
      no_log: true
      containers.podman.podman_login:
        registry: "{{ item.registry }}"
        username: "{{ item.username }}"
        password: "{{ item.password }}"
      loop:
        - registry: "{{ custom_registry_url }}"
          username: "{{ custom_registry_username }}"
          password: "{{ custom_registry_password }}"
        - registry: "{{ redhat_registry_url }}"
          username: "{{ redhat_registry_username }}"
          password: "{{ redhat_registry_password }}"

    - name: Image Mode CI/CD - AAP | Build RHEL Image
      containers.podman.podman_image:
        name: "{{ custom_registry_url }}/{{ custom_registry_username }}/{{ image_name }}"
        build_args:
          force_rm: true
          file: "{{ containerfile_path }}"
        path: "{{ build_dir }}/{{ image_build_context }}"
        pull: false

    - name: Image Mode CI/CD - AAP | Tag Image
      containers.podman.podman_tag:
        image: "{{ custom_registry_url }}/{{ custom_registry_username }}/{{ image_name }}:latest"
        target_names:
          - "{{ custom_registry_url }}/{{ custom_registry_username }}/rhel-image-mode-demo:{{ item }}"
      loop: "{{ image_tags | from_yaml }}"

    - name: Image Mode CI/CD - AAP | Push RHEL Image
      containers.podman.podman_image:
        name: "{{ custom_registry_url }}/{{ custom_registry_username }}/{{ image_name }}"
        path: "{{ build_dir }}"
        push: true
        pull: false
        tag: "{{ item }}"
      loop: "{{ image_tags | from_yaml }}"

    - name: Image Mode CI/CD - AAP | Cleanup local working directory
      ansible.builtin.file:
        path: "{{ workdir }}"
        state: absent
